on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: google-github-actions/release-please-action@v3.3.0
        with:
          command: manifest
      # The logic below handles the npm publication:
      - name: releaseinfo
        run: echo "${{ steps.release }}"
      - name: Checkout Repository
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: v16.13.0
      - name: Build Packages
        if: ${{ steps.release.outputs.release_created }}
        run: |
          corepack enable
          yarn install --immutable --immutable-cache
          yarn build
      # Release Please has already incremented versions and published tags, so we just
      # need to publish all unpublished versions to NPM here
      # See: https://github.com/lerna/lerna/tree/main/commands/publish#bump-from-package
      - name: Publish to NPM
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: yarn publish
  release-please-branch:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: google-github-actions/release-please-action@v3.3.0
        with:
          command: manifest
          prerelease: true
          skip-github-release: true
      - name: releaseinfo
        run: echo "${{ steps.release }}"
      - name: Checkout Repository
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: v16.13.0
      - name: Build Packages
        if: ${{ steps.release.outputs.release_created }}
        run: |
          corepack enable
          yarn install --immutable --immutable-cache
          yarn build
      - name: Publish to NPM
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: yarn publish
